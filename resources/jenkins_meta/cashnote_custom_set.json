{
  "name": "cashnote_custom_set",
  "udfs": [],
  "source": [
    {
      "inputs": [],
      "name": "custom_set",
      "options": {
        "url": "jdbc:postgresql://plover-data-production.cmf8pqcqka6h.ap-northeast-2.rds.amazonaws.com:5432/plover_data_production",
        "dbtable": "custom_set",
        "user": "plover",
        "password": "3d1f620c-f097-43b3-9125-c4ec60a5d3da",
        "fetchsize": "5000",
        "numRowsPerPartition": "50000"
      },
      "type": "jdbc"
    },
    {
      "inputs": [],
      "name": "memberships",
      "options": {
        "format": "parquet",
        "paths": "s3://kcd-de-production/raw/db/snowdon/snapshot/latest/memberships"
      },
      "type": "file"
    },
    {
      "inputs": [],
      "name": "businesses",
      "options": {
        "format": "parquet",
        "paths": "s3://kcd-de-production/raw/db/snowdon/snapshot/latest/businesses"
      },
      "type": "file"
    }
  ],
  "process": [
    {
      "inputs": [
        "custom_set"
      ],
      "name": "valid_custom_set",
      "options": {
        "sql": "SELECT    *\nFROM      custom_set\nWHERE     enabled = true\nAND       user_type = 'cashnote'"
      },
      "type": "sql"
    },
    {
      "inputs": [
        "valid_custom_set"
      ],
      "name": "custom_set_values",
      "options": {
        "class": "com.kcd.thrush.message.spark.CustomSetReadProcess"
      },
      "type": "custom",
      "cache": true
    },
    {
      "inputs": [
        "custom_set_values",
        "memberships"
      ],
      "name": "dim_user_id",
      "options": {
        "sql": "  SELECT      custom_set_id, status,\n              memberships.business_id,\n              memberships.user_id\n  FROM (\n    SELECT    custom_set_id, custom_set_value, status\n    FROM      custom_set_values\n    WHERE     dimension = 'user_id'\n    AND       status in ('RUNNING', 'COMPLETE')\n  ) AS custom_set\n  JOIN memberships\n  ON custom_set.custom_set_value = memberships.user_id"
      },
      "type": "sql"
    },
    {
      "inputs": [
        "custom_set_values",
        "memberships"
      ],
      "name": "dim_business_id",
      "options": {
        "sql": "  SELECT      custom_set_id, status,\n              memberships.business_id,\n              memberships.user_id\n  FROM (\n    SELECT    custom_set_id, custom_set_value, status\n    FROM      custom_set_values\n    WHERE     dimension = 'business_id'\n    AND       status in ('RUNNING', 'COMPLETE')\n  ) AS custom_set\n  JOIN memberships\n  ON custom_set.custom_set_value = memberships.business_id"
      },
      "type": "sql"
    },
    {
      "inputs": [
        "custom_set_values",
        "businesses",
        "memberships"
      ],
      "name": "dim_public_id",
      "options": {
        "sql": "  SELECT\n          c.custom_set_id, c.status,\n          c.business_id,\n          memberships.user_id\n  FROM (\n          SELECT      custom_set_id, status,\n                      businesses.id AS business_id\n          FROM (\n            SELECT    custom_set_id, custom_set_value, status\n            FROM      custom_set_values\n            WHERE     dimension = 'public_id'\n            AND       status in ('RUNNING', 'COMPLETE')\n          ) AS custom_set\n          JOIN businesses\n          ON custom_set.custom_set_value = businesses.public_id\n  ) c\n  JOIN    memberships\n  ON      c.business_id = memberships.business_id"
      },
      "type": "sql"
    },
    {
      "inputs": [
        "dim_user_id",
        "dim_business_id",
        "dim_public_id"
      ],
      "name": "grouped",
      "options": {
        "sql": "  SELECT\n          status, business_id, user_id,\n          CONCAT(user_id, '_', business_id) AS target_id,\n          collect_set(custom_set_id) AS custom_set_ids\n  FROM (\n          SELECT  custom_set_id, status, business_id, user_id\n          FROM    dim_user_id\n\n          UNION ALL\n\n          SELECT  custom_set_id, status, business_id, user_id\n          FROM    dim_business_id\n\n          UNION ALL\n\n          SELECT  custom_set_id, status, business_id, user_id\n          FROM    dim_public_id\n\n  )\n  GROUP BY status, business_id, user_id"
      },
      "type": "sql",
      "cache": true
    },
    {
      "inputs": [
        "grouped"
      ],
      "name": "custom_set_all",
      "options": {
        "sql": "  SELECT\n          target_id,\n          flatten(collect_list(custom_set_ids)) AS custom_set_ids\n  FROM    grouped\n  GROUP BY target_id"
      },
      "type": "sql"
    },
    {
      "inputs": [
        "grouped"
      ],
      "name": "custom_set_new",
      "options": {
        "sql": "SELECT\n      set_new.target_id,\n      array_except(\n          array_union(\n              set_new.custom_set_ids,\n              nvl(set_old.custom_set_ids, array(null))\n          ),\n          array(null)\n       ) AS custom_set_ids\nFROM (\n        SELECT    *\n        FROM      grouped\n        WHERE     status = 'RUNNING'\n) AS set_new\nLEFT OUTER JOIN (\n        SELECT    *\n        FROM      grouped\n        WHERE     status = 'COMPLETE'\n) AS set_old\nON    set_new.target_id = set_old.target_id"
      },
      "type": "sql"
    },
    {
      "inputs": [
        "custom_set_new"
      ],
      "name": "add_join_field",
      "options": {
        "sql": "SELECT\n          to_timestamp('2021-01-29 07_18', 'yyyy-MM-dd HH_mm') AS timestamp,\n          named_struct(\n            'name', 'meta'\n          ) AS join_field,\n          *\nFROM      custom_set_new\nWHERE     target_id IS NOT NULL"
      },
      "type": "sql"
    }
  ],
  "sink": [
    {
      "inputs": [
        "custom_set_all"
      ],
      "name": "file_sink",
      "options": {
        "format": "parquet",
        "mode": "overwrite",
        "path": "s3://kcd-de-production/service/message/custom_set/user_type=cashnote/date_id=2021-01-29/ts=07_18"
      },
      "type": "file"
    },
    {
      "inputs": [
        "add_join_field"
      ],
      "name": "es_sink",
      "options": {
        "path": "cashnote",
        "es.nodes": "https://vpc-dmp-es-prod-tw5nccwbgynfhq5ivdolhmaxsq.ap-northeast-2.es.amazonaws.com",
        "es.index.auto.create": "true",
        "es.port": "443",
        "es.batch.size.entries": "1000",
        "es.nodes.wan.only": "true",
        "es.mapping.id": "target_id",
        "es.mapping.join": "join_field",
        "es.write.operation": "upsert"
      },
      "type": "es"
    }
  ]
}
