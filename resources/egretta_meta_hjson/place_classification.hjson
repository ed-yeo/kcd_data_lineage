{
  // PARAMS: TEMP_PATH, TARGET_PATH
  name: place_classification
  udfs: [
  ]
  source:
  [
    {
      inputs: []
      name: places_src
      options:
      {
        format: parquet
        paths: ${DB_DUMP_DIR}/snowdon/snapshot/latest/places
      }
      type: file
      cache: true
    }
  ]
  process:
  [
    {
      inputs:
      [
        places_src
      ]
      name: naver
      options:
      {
        sql:
          '''
          SELECT  *, classification AS naver_classification
          FROM    places_src
          WHERE   type = 'Places::Naver'
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        places_src
      ]
      name: kakao
      options:
      {
        sql:
          '''
          SELECT  *, classification AS kakao_classification
          FROM    places_src
          WHERE   type = 'Places::Daum'
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        naver
        kakao
      ]
      name: mapping
      options:
      {
        sql:
          '''
          SELECT  *
          FROM    (
            SELECT  *,
                    row_number() OVER (PARTITION BY naver_classification ORDER BY count DESC) AS rank
            FROM    (
              SELECT  naver_classification, kakao_classification,
                      count(1) AS count
              FROM  (
                SELECT  business_id, classification AS kakao_classification
                FROM    kakao
                WHERE   classification is not null
              ) kakao, (
                SELECT  business_id, classification AS naver_classification
                FROM    naver
                WHERE   classification is not null
              ) naver
              WHERE   kakao.business_id = naver.business_id
              GROUP BY 1, 2
            )
          )
          WHERE rank = 1
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        naver
        kakao
      ]
      name: kakao_only
      options:
      {
        sql:
          '''
          SELECT  *, classification AS kcd_classification
          FROM    kakao
          WHERE   kakao_classification is not null
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        naver
        kakao
        mapping
      ]
      name: naver_only
      options:
      {
        sql:
          '''
          SELECT  /*+BROADCAST(m) */
                  n.*, m.kakao_classification AS kcd_classification
          FROM    (
            SELECT  /*+BROADCAST(k) */
                    n.*
            FROM    naver n LEFT OUTER JOIN kakao k ON (n.business_id = k.business_id)
            WHERE   k.business_id is null
            AND     n.naver_classification is not null
          ) n LEFT OUTER JOIN mapping m ON (n.classification = m.naver_classification)
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        kakao_only
        naver_only
      ]
      name: place_classification_with_location
      options:
      {
        sql:
          '''
          SELECT business_id,
                 split(kcd_classification, ' > ') AS classification_arr,
                 split(lot_address, ' ') AS location_arr,
                 street_address
          FROM  (
              SELECT * FROM kakao_only
              UNION ALL
              SELECT * FROM naver_only
          )
          WHERE business_id IS NOT NULL
          '''
      }
      type: sql
      cache: true
    }
    {
      inputs:
      [
        place_classification_with_location
      ]
      name: kcd_classification
      options:
      {
        sql:
          '''
          SELECT
                    CAST(business_id AS Int) AS business_id,
                    classification_arr[0] AS depth_1_name,
                    classification_arr[1] AS depth_2_name,
                    classification_arr[2] AS depth_3_name,
                    classification_arr[3] AS depth_4_name,
                    classification_arr[4] AS depth_5_name
          FROM      place_classification_with_location
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        naver
      ]
      name: naver_classification
      options:
      {
        sql:
          '''
          SELECT    *
          FROM (
                  SELECT  CAST(business_id AS Int) AS business_id,
                          arr[0] AS depth_1_name,
                          arr[1] AS depth_2_name,
                          arr[2] AS depth_3_name,
                          arr[3] AS depth_4_name,
                          arr[4] AS depth_5_name
                  FROM (
                          SELECT  business_id,
                                  split(classification, ' > ') AS arr
                          FROM    naver
                          WHERE   business_id is not null
                  )
          )
          WHERE depth_1_name IS NOT NULL
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        kakao
      ]
      name: kakao_classification
      options:
      {
        sql:
          '''
          SELECT    *
          FROM (
                  SELECT  CAST(business_id AS Int) AS business_id,
                          arr[0] AS depth_1_name,
                          arr[1] AS depth_2_name,
                          arr[2] AS depth_3_name,
                          arr[3] AS depth_4_name,
                          arr[4] AS depth_5_name
                  FROM (
                          SELECT  business_id,
                                  split(classification, ' > ') AS arr
                          FROM    kakao
                          WHERE   business_id is not null
                  )
          )
          WHERE depth_1_name IS NOT NULL
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        place_classification_with_location
      ]
      name: kcd_location
      options:
      {
        sql:
          '''
          SELECT
                    CAST(business_id AS Int) AS business_id,
                     case
                         when location_arr[0] = '서울' then '서울특별시'
                         when location_arr[0] = '세종특별자치' then '세종특별자치시'
                         when location_arr[0] = '강원' then '강원도'
                         when location_arr[0] = '경기' then '경기도'
                         when location_arr[0] = '경남' then '경상남도'
                         when location_arr[0] = '경북' then '경상북도'
                         when location_arr[0] = '광주' then '광주광역시'
                         when location_arr[0] = '대구' then '대구광역시'
                         when location_arr[0] = '대전' then '대전광역시'
                         when location_arr[0] = '부산' then '부산광역시'
                         when location_arr[0] = '세종' then '세종특별자치시'
                         when location_arr[0] = '울산' then '울산광역시'
                         when location_arr[0] = '인천' then '인천광역시'
                         when location_arr[0] = '전남' then '전라남도'
                         when location_arr[0] = '전북' then '전라북도'
                         when location_arr[0] = '제주' then '제주특별자치도'
                         when location_arr[0] = '충남' then '충청남도'
                         when location_arr[0] = '충북' then '충청북도'
                         else location_arr[0]
                     end as lot_address_1_depth,
                     location_arr[1] AS lot_address_2_depth,
                     location_arr[2] AS lot_address_3_depth,
                     street_address
          FROM      place_classification_with_location
          '''
      }
      type: sql
    }
  ]
  sink:
  [
    {
      inputs:
      [
        mapping
      ]
      name: file_sink
      options:
      {
        format: parquet
        mode: overwrite
        path: ${LOOKUP_DIR}/subject=classification/name=naver_kakao_map
      }
      type: file
    }
    {
      inputs:
      [
        kakao_classification
      ]
      name: file_sink
      options:
      {
        format: parquet
        mode: overwrite
        path: ${DIMENSION_DIR}/id_type=${ID_TYPE}/subject=${SUBJECT}/name=kakao
      }
      type: file
    }
    {
      inputs:
      [
        naver_classification
      ]
      name: file_sink
      options:
      {
        format: parquet
        mode: overwrite
        path: ${DIMENSION_DIR}/id_type=${ID_TYPE}/subject=${SUBJECT}/name=naver
      }
      type: file
    }
    {
      inputs:
      [
        kcd_classification
      ]
      name: file_sink
      options:
      {
        format: parquet
        mode: overwrite
        path: ${DIMENSION_DIR}/id_type=${ID_TYPE}/subject=${SUBJECT}/name=place
      }
      type: file
    }
    {
      inputs:
      [
        kcd_location
      ]
      name: file_sink
      options:
      {
        format: parquet
        mode: overwrite
        path: ${DIMENSION_DIR}/id_type=${ID_TYPE}/subject=location/name=place_classification
      }
      type: file
    }
  ]
}