{
  name: paynote_user_stat
  udfs: [
  ]
  source:
  [
    {
      inputs: []
      name: card_payments
      options:
      {
        format: parquet
        paths: ${DB_DUMP_DIR}/goose/incremental/card_payments
      }
      type: file
    }
    {
      inputs: []
      name: merchant_meta
      options:
      {
        format: parquet
        paths: ${DATACUBE_DIR}/dimension/name=merchant_meta
      }
      type: file
    }
  ]
  process:
  [
    {
      inputs:
      [
        merchant_meta
      ]
      name: merchant
      options:
      {
        sql:
          '''
          SELECT    registration_number, card_issuer, merchant_number,
                    named_struct(
                        'merchant', merchant.info.merchant,
                        'kakao', places.kakao.name,
                        'naver', places.naver.name
                    ) AS name,
                    classification,
                    location
          FROM      merchant_meta
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        card_payments
      ]
      name: card_payments_stat
      options:
      {
        sql:
          '''
            SELECT
                    user_id, timestamp,
                    registration_number, card_issuer, merchant_number,
                    SUM(amount) AS amount_sum,
                    COUNT(1) AS tx_count
            FROM (
                    SELECT
                            user_id,
                            date_trunc('${TIME_UNIT}', approved_at) AS timestamp,
                            registration_number, card_issuer, merchant_number,
                            amount
                    FROM    card_payments
                    WHERE   approved_at between '${from_date_id}' AND '${to_date_id}'
                    AND     card_issuer IS NOT NULL
           )
           GROUP BY user_id, timestamp, registration_number, card_issuer, merchant_number
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        card_payments_stat
        merchant
      ]
      name: merged
      options:
      {
        sql:
          '''
          SELECT
                    *,
                    array(
                      classification.depth_1_name,
                      CONCAT(classification.depth_1_name, '>', classification.depth_2_name),
                      CONCAT(classification.depth_1_name, '>', classification.depth_2_name, '>', classification.depth_3_name)
                    ) AS classification_names,
                    array(
                      location.sido,
                      CONCAT(location.sido, '>', location.sigungu),
                      CONCAT(location.sido, '>', location.sigungu, '>', location.dong)
                    ) AS location_names
          FROM (
                  SELECT
                            date_format(timestamp, 'yyyy-MM-dd') AS date_id,
                            card_payments_stat.timestamp,
                            card_payments_stat.user_id,
                            card_payments_stat.registration_number,
                            card_payments_stat.card_issuer,
                            card_payments_stat.merchant_number,
                            card_payments_stat.amount_sum AS card_payments_amount_sum,
                            card_payments_stat.tx_count AS card_payments_tx_count,
                            merchant.name,
                            merchant.classification.kcd AS classification,
                            merchant.location.common AS location
                  FROM      card_payments_stat
                  LEFT OUTER JOIN   merchant
                  ON        card_payments_stat.registration_number = merchant.registration_number
                  AND       card_payments_stat.card_issuer = merchant.card_issuer
                  AND       card_payments_stat.merchant_number = merchant.merchant_number
          )
          '''
      }
      type: sql
    }
  ]
  sink:
  [
    {
      inputs:
      [
        merged
      ]
      name: file_sink
      options:
      {
        format: parquet
        mode: overwrite
        path: ${DATACUBE_DIR}/fact/time_unit=${TIME_UNIT}/name=paynote_user_stats
        evenPartitions: "true"
        partitions: date_id
      }
      type: file
    }
  ]
}