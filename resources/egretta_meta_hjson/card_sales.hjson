{
  name: registration_number_card_sales
  udfs: [
  ]
  source:
  [
    {
      inputs: []
      name: businesses
      options:
      {
        format: parquet
        paths: ${DB_DUMP_DIR}/snowdon/snapshot/latest/businesses
      }
      type: file
    }
    {
      inputs: []
      name: cashnote_cardsales
      options:
      {
        format: parquet
        paths: ${FACT_DIR}/time_unit=${TIME_UNIT}/id_type=business_id/subject=cardsales/name=sales_transactions
      }
      type: file
    }
    {
      inputs: []
      name: paynote_users
      options:
      {
        format: parquet
        paths: ${DIMENSION_DIR}/id_type=paynote_user_id/subject=users/name=users
      }
      type: file
    }
    {
      inputs: []
      name: card_payments
      options:
      {
        format: parquet
        paths: ${DB_DUMP_DIR}/goose/incremental/card_payments
      }
      type: file
    }
  ]
  process:
  [
    {
      inputs:
      [
        businesses
      ]
      name: mappings
      options:
      {
        sql:
          '''
          SELECT    registration_number, id AS business_id
          FROM      businesses
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        mappings
        cashnote_cardsales
      ]
      name: cashnote
      options:
      {
        sql:
          '''
            SELECT  registration_number,
                    SUM(amount_sum) AS amount_sum,
                    SUM(tx_count) AS tx_count
            FROM (
                    SELECT
                            mappings.registration_number,
                            c.*
                    FROM    (
                                SELECT  *
                                FROM    cashnote_cardsales
                                WHERE   date_id between '${from_date_id}' AND '${to_date_id}'
                    ) c
                    JOIN    mappings
                    ON      c.business_id = mappings.business_id
            )
            GROUP BY registration_number
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        card_payments
        paynote_users
      ]
      name: payments_with_user_demo
      options:
      {
        sql:
          '''
           SELECT
                   payment.*,
                   paynote_users.gender,
                   paynote_users.age_band
           FROM (
               SELECT
                       date_trunc('MONTH', approved_at) AS timestamp,
                       registration_number,
                       user_id,
                       amount
               FROM    card_payments
               WHERE   approved_at between '${from_date_id}' AND '${to_date_id}'
               AND     card_issuer IS NOT NULL
           ) AS payment
           JOIN paynote_users
           ON payment.user_id = paynote_users.user_id
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        payments_with_user_demo
      ]
      name: paynote_stat
      options:
      {
        sql:
          '''
            SELECT
                    timestamp, registration_number, gender, age_band,
                    concat(age_band, '_', gender) AS age_band_gender,
                    SUM(amount) AS amount_sum,
                    COUNT(1) AS tx_count
            FROM   payments_with_user_demo
            GROUP BY timestamp, registration_number, gender, age_band
          '''
      }
      type: sql
      cache: true
    }
    {
      inputs:
      [
        paynote_stat
      ]
      name: paynote_stat_gender
      options:
      {
        sql:
          '''
          SELECT
                  registration_number,
                  collect_list(
                    named_struct('key', gender, 'values', struct(amount_sum, tx_count))
                  ) AS stats
          FROM (
                    SELECT
                            registration_number,
                            gender,
                            SUM(amount_sum) AS amount_sum,
                            SUM(tx_count) AS tx_count
                    FROM   paynote_stat
                    GROUP BY registration_number, gender
          )
          GROUP BY registration_number
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        paynote_stat
      ]
      name: paynote_stat_age_band
      options:
      {
        sql:
          '''
            SELECT
                    registration_number,
                    collect_list(
                      named_struct('key', age_band, 'values', struct(amount_sum, tx_count))
                    ) AS stats
            FROM (
                    SELECT
                            registration_number,
                            age_band,
                            SUM(amount_sum) AS amount_sum,
                            SUM(tx_count) AS tx_count
                    FROM   paynote_stat
                    GROUP BY registration_number, age_band
           )
           GROUP BY registration_number
          '''
      }
      type: sql
    }
    {
      inputs:
      [
        paynote_stat
      ]
      name: paynote_stat_age_band_gender
      options:
      {
        sql:
          '''
            SELECT
                    registration_number,
                    SUM(amount_sum) AS total_amount_sum,
                    SUM(tx_count) AS total_tx_count,
                    collect_list(
                      named_struct('key', age_band_gender, 'values', struct(amount_sum, tx_count))
                    ) AS stats
           FROM     (
                       SELECT
                               registration_number,
                               age_band_gender,
                               SUM(amount_sum) AS amount_sum,
                               SUM(tx_count) AS tx_count
                       FROM   paynote_stat
                       GROUP BY registration_number, age_band_gender
           )
           GROUP BY registration_number
          '''
      }
      type: sql
    }

  ]
  sink:
  [
    {
      inputs:
      [
        cashnote
      ]
      name: file_sink
      options:
      {
        format: parquet
        mode: overwrite
        path: ${DIMENSION_DIR}/id_type=${ID_TYPE}/subject=${SUBJECT}/name=cashnote
      }
      type: file
    }
    {
      inputs:
      [
        paynote_stat_gender
      ]
      name: file_sink
      options:
      {
        format: parquet
        mode: overwrite
        path: ${DIMENSION_DIR}/id_type=${ID_TYPE}/subject=${SUBJECT}/name=paynote_gender
      }
      type: file
    }
    {
      inputs:
      [
        paynote_stat_age_band
      ]
      name: file_sink
      options:
      {
        format: parquet
        mode: overwrite
        path: ${DIMENSION_DIR}/id_type=${ID_TYPE}/subject=${SUBJECT}/name=paynote_age_band
      }
      type: file
    }
    {
      inputs:
      [
        paynote_stat_age_band_gender
      ]
      name: file_sink
      options:
      {
        format: parquet
        mode: overwrite
        path: ${DIMENSION_DIR}/id_type=${ID_TYPE}/subject=${SUBJECT}/name=paynote_age_band_gender
      }
      type: file
    }
  ]
}