{
  name: build_corona_weekly_stats
  udfs: [
  ]
  source:
  [
    {
      inputs: []
      name: targets
      options:
      {
        format: parquet
        paths: "s3://thrush/test/shon/corona/targets_20200331"
      }
      type: file
    }
    {
      inputs: []
      name: transactions_stat_with_meta
      options:
      {
        format: parquet
        paths: "${TRANSACTIONS_STAT_WITH_META_PATH}"
      }
      type: file
    }
  ]
  process:
  [
    {
      inputs:
      [
        targets
        transactions_stat_with_meta
      ]
      name: weekly_txns
      options:
      {
        sql:
          '''
          SELECT  *,
                  weekofyear(transacted_at_week) AS week_of_year
          FROM    (
            SELECT  st.business_id,
                    date_trunc('week', time) AS transacted_at_week,
                    SUM(card_sales_amount) AS amount_sum,
                    SUM(IF (hour(time) < 18 AND hour(time) >= 6, card_sales_amount, 0)) as day_time_amount_sum,
                    SUM(IF (hour(time) >= 18 OR hour(time) < 6, card_sales_amount, 0)) as night_time_amount_sum,
                    SUM(IF (weekday(time) > 4, card_sales_amount, 0)) as weekend_amount_sum,
                    SUM(IF (weekday(time) <= 4, card_sales_amount, 0)) as weekday_amount_sum,
                    SUM(card_sales_amount - returning_amount) as new_amount_sum,
                    SUM(returning_amount) as revisit_amount_sum,
                    SUM(card_sales_count) as tx_count,
                    MAX(st.place.lot_address_1_depth) as lot_address_1_depth,
                    MAX(st.place.lot_address_2_depth) as lot_address_2_depth,
                    MAX(st.place.lot_address_3_depth) as lot_address_3_depth,
                    MAX(st.place.kcd_classification_1_depth) as kcd_classification_1_depth,
                    MAX(st.place.kcd_classification_2_depth) as kcd_classification_2_depth,
                    MAX(st.place.kcd_classification_3_depth) as kcd_classification_3_depth
            FROM    transactions_stat_with_meta st, targets t
            WHERE   st.business_id = t.business_id
            AND     t.transacted_at_month_count = 13
            AND     st.time_unit = 'day_hour'
            AND     weekofyear(st.time) < weekofyear(current_date())
            GROUP BY 1, 2
          )
          '''
      }
      type: sql
    }
  ]
  sink:
  [
    {
      inputs:
      [
        weekly_txns
      ]
      name: file_sink
      options: {
        mode: overwritePartitions
        path: "${OUTPUT_PATH}/${CURRENT_WEEK_NUMBER}/weekly_txns"
        format: parquet
        class: 'com.kcd.thrush.jobs.tasks.EvenPartitionFileSink'
        partitions: "week_of_year"
        evenPartitions: "true"
        numOfRecordPerFile: "4000000"
        sampleRatio: "0.1"
        checkpoint: "false"
      }
      type: custom
    }
  ]
}